Index: app/src/main/java/me/neko/nzhelper/ui/screens/MainScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package me.neko.nzhelper.ui.screens\r\n\r\nimport android.content.Context\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.material3.*\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.platform.LocalContext\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.navigation.NavController\r\nimport androidx.navigation.NavGraph.Companion.findStartDestination\r\nimport androidx.navigation.compose.*\r\nimport android.content.Intent\r\nimport android.provider.Settings\r\nimport androidx.compose.foundation.layout.WindowInsets\r\nimport androidx.compose.runtime.*\r\nimport androidx.compose.runtime.setValue\r\nimport androidx.core.app.NotificationManagerCompat\r\nimport androidx.navigation.compose.rememberNavController\r\nimport me.neko.nzhelper.BuildConfig\r\nimport androidx.core.net.toUri\r\nimport me.neko.nzhelper.ui.util.BottomNavItem\r\nimport me.neko.nzhelper.ui.util.UpdateChecker\r\n\r\n@Composable\r\nfun BottomNavigationBar(navController: NavController) {\r\n    val navBackStackEntry by navController.currentBackStackEntryAsState()\r\n    val currentRoute = navBackStackEntry?.destination?.route\r\n    NavigationBar {\r\n        BottomNavItem.Companion.items.forEach { item ->\r\n            NavigationBarItem(\r\n                icon = { Icon(imageVector = item.icon, contentDescription = item.title) },\r\n                label = { Text(text = item.title) },\r\n                selected = currentRoute == item.route,\r\n                onClick = {\r\n                    navController.navigate(item.route) {\r\n                        launchSingleTop = true\r\n                        restoreState = true\r\n                        popUpTo(navController.graph.findStartDestination().id) {\r\n                            saveState = true\r\n                        }\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun MainScreen() {\r\n    val navController = rememberNavController()\r\n    val context = LocalContext.current\r\n\r\n    // 检查通知权限\r\n    val notificationsEnabled = NotificationManagerCompat.from(context).areNotificationsEnabled()\r\n    var showNotifyDialog by remember { mutableStateOf(!notificationsEnabled) }\r\n\r\n    // 打开应用通知设置\r\n    fun openNotificationSettings(context: Context) {\r\n        val intent = Intent().apply {\r\n            action =\r\n                Settings.ACTION_APP_NOTIFICATION_SETTINGS\r\n            putExtra(Settings.EXTRA_APP_PACKAGE, context.packageName)\r\n            putExtra(\"app_uid\", context.applicationInfo.uid)\r\n            addFlags(Intent.FLAG_ACTIVITY_NEW_TASK)\r\n        }\r\n        context.startActivity(intent)\r\n    }\r\n\r\n    val owner = \"bug-bit\"\r\n    val repo  = \"NzHelper\"\r\n\r\n    var showUpdateDialog by remember { mutableStateOf(false) }\r\n    var latestTag by remember { mutableStateOf<String?>(null) }\r\n\r\n    fun stripSuffix(version: String): String =\r\n        version.trimStart('v','V').substringBefore('-')\r\n\r\n    fun parseNumbers(version: String): List<Int> =\r\n        stripSuffix(version)\r\n            .split('.')\r\n            .map { it.toIntOrNull() ?: 0 }\r\n            .let {\r\n                when {\r\n                    it.size >= 3 -> it.take(3)\r\n                    it.size == 2 -> it + listOf(0)\r\n                    it.size == 1 -> it + listOf(0, 0)\r\n                    else -> listOf(0, 0, 0)\r\n                }\r\n            }\r\n\r\n    fun isRemoteGreater(local: String, remote: String): Boolean {\r\n        val localNums  = parseNumbers(local)\r\n        val remoteNums = parseNumbers(remote)\r\n        for (i in 0..2) {\r\n            if (remoteNums[i] > localNums[i]) return true\r\n            if (remoteNums[i] < localNums[i]) return false\r\n        }\r\n        return false\r\n    }\r\n\r\n    LaunchedEffect(Unit) {\r\n        UpdateChecker.fetchLatestVersion(owner, repo)?.let { remoteVer ->\r\n            latestTag = remoteVer\r\n            if (isRemoteGreater(BuildConfig.VERSION_NAME, remoteVer)) {\r\n                showUpdateDialog = true\r\n            }\r\n        }\r\n    }\r\n\r\n    Scaffold(\r\n        bottomBar = { BottomNavigationBar(navController) },\r\n        contentWindowInsets = WindowInsets(0, 0, 0, 0)\r\n    ) { innerPadding ->\r\n        NavHost(\r\n            navController = navController,\r\n            startDestination = BottomNavItem.Home.route,\r\n            modifier = Modifier.padding(innerPadding)\r\n        ) {\r\n            composable(BottomNavItem.Home.route) { HomeScreen() }\r\n            composable(BottomNavItem.History.route) { HistoryScreen() }\r\n            composable(BottomNavItem.Settings.route) { SettingsScreen() }\r\n        }\r\n\r\n        if (showUpdateDialog && latestTag != null) {\r\n            AlertDialog(\r\n                onDismissRequest = { showUpdateDialog = false },\r\n                title = { Text(\"检测到新版本\") },\r\n                text = {\r\n                    Text(\r\n                        \"当前版本：${BuildConfig.VERSION_NAME}\\n\" +\r\n                                \"最新版本：$latestTag\\n\\n\" +\r\n                                \"针对你的牛牛进行了一些优化，是否前往 GitHub 下载？\"\r\n                    )\r\n                },\r\n                confirmButton = {\r\n                    TextButton(onClick = {\r\n                        showUpdateDialog = false\r\n                        val intent = Intent(\r\n                            Intent.ACTION_VIEW,\r\n                            \"https://github.com/$owner/$repo/releases/latest\".toUri()\r\n                        )\r\n                        context.startActivity(intent)\r\n                    }) { Text(\"去下载\") }\r\n                },\r\n                dismissButton = {\r\n                    TextButton(onClick = { showUpdateDialog = false }) {\r\n                        Text(\"稍后再说\")\r\n                    }\r\n                }\r\n            )\r\n        }\r\n        if (showNotifyDialog) {\r\n            AlertDialog(\r\n                onDismissRequest = { showNotifyDialog = false },\r\n                title = {\r\n                    Text(text = \"还未开启通知权限\")\r\n                },\r\n                text = {\r\n                    Text(\"为确保应用能在后台继续计时，请授予通知权限！\")\r\n                },\r\n                confirmButton = {\r\n                    Button(\r\n                        onClick = {\r\n                            openNotificationSettings(context)\r\n                            showNotifyDialog = false\r\n                        },\r\n                        colors = ButtonDefaults.buttonColors(\r\n                            containerColor = MaterialTheme.colorScheme.primary\r\n                        )\r\n                    ) {\r\n                        Text(\"去开启\")\r\n                    }\r\n                },\r\n                dismissButton = {\r\n                    TextButton(onClick = { showNotifyDialog = false }) {\r\n                        Text(\"以后再说\")\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Preview(showBackground = true)\r\n@Composable\r\nfun MainScreenPreview() {\r\n    MainScreen()\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/me/neko/nzhelper/ui/screens/MainScreen.kt b/app/src/main/java/me/neko/nzhelper/ui/screens/MainScreen.kt
--- a/app/src/main/java/me/neko/nzhelper/ui/screens/MainScreen.kt	(revision 53dbb1212b49f88df6f6d0cd68e480b80ae8ac3e)
+++ b/app/src/main/java/me/neko/nzhelper/ui/screens/MainScreen.kt	(date 1752070251328)
@@ -1,25 +1,39 @@
 package me.neko.nzhelper.ui.screens
 
 import android.content.Context
+import android.content.Intent
+import android.provider.Settings
+import androidx.compose.foundation.layout.WindowInsets
 import androidx.compose.foundation.layout.padding
-import androidx.compose.material3.*
+import androidx.compose.material3.AlertDialog
+import androidx.compose.material3.Button
+import androidx.compose.material3.ButtonDefaults
+import androidx.compose.material3.ExperimentalMaterial3Api
+import androidx.compose.material3.Icon
+import androidx.compose.material3.MaterialTheme
+import androidx.compose.material3.NavigationBar
+import androidx.compose.material3.NavigationBarItem
+import androidx.compose.material3.Scaffold
+import androidx.compose.material3.Text
+import androidx.compose.material3.TextButton
 import androidx.compose.runtime.Composable
+import androidx.compose.runtime.LaunchedEffect
 import androidx.compose.runtime.getValue
+import androidx.compose.runtime.mutableStateOf
+import androidx.compose.runtime.remember
+import androidx.compose.runtime.setValue
 import androidx.compose.ui.Modifier
 import androidx.compose.ui.platform.LocalContext
 import androidx.compose.ui.tooling.preview.Preview
+import androidx.core.app.NotificationManagerCompat
+import androidx.core.net.toUri
 import androidx.navigation.NavController
 import androidx.navigation.NavGraph.Companion.findStartDestination
-import androidx.navigation.compose.*
-import android.content.Intent
-import android.provider.Settings
-import androidx.compose.foundation.layout.WindowInsets
-import androidx.compose.runtime.*
-import androidx.compose.runtime.setValue
-import androidx.core.app.NotificationManagerCompat
+import androidx.navigation.compose.NavHost
+import androidx.navigation.compose.composable
+import androidx.navigation.compose.currentBackStackEntryAsState
 import androidx.navigation.compose.rememberNavController
 import me.neko.nzhelper.BuildConfig
-import androidx.core.net.toUri
 import me.neko.nzhelper.ui.util.BottomNavItem
 import me.neko.nzhelper.ui.util.UpdateChecker
 
@@ -70,13 +84,13 @@
     }
 
     val owner = "bug-bit"
-    val repo  = "NzHelper"
+    val repo = "NzHelper"
 
     var showUpdateDialog by remember { mutableStateOf(false) }
     var latestTag by remember { mutableStateOf<String?>(null) }
 
     fun stripSuffix(version: String): String =
-        version.trimStart('v','V').substringBefore('-')
+        version.trimStart('v', 'V').substringBefore('-')
 
     fun parseNumbers(version: String): List<Int> =
         stripSuffix(version)
@@ -92,7 +106,7 @@
             }
 
     fun isRemoteGreater(local: String, remote: String): Boolean {
-        val localNums  = parseNumbers(local)
+        val localNums = parseNumbers(local)
         val remoteNums = parseNumbers(remote)
         for (i in 0..2) {
             if (remoteNums[i] > localNums[i]) return true
@@ -121,7 +135,10 @@
         ) {
             composable(BottomNavItem.Home.route) { HomeScreen() }
             composable(BottomNavItem.History.route) { HistoryScreen() }
-            composable(BottomNavItem.Settings.route) { SettingsScreen() }
+            composable(BottomNavItem.Settings.route) { SettingsScreen(navController) }
+            composable("about") {
+                AboutScreen(navController)
+            }
         }
 
         if (showUpdateDialog && latestTag != null) {
Index: app/src/main/java/me/neko/nzhelper/ui/screens/SettingsScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package me.neko.nzhelper.ui.screens\r\n\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.WindowInsets\r\nimport androidx.compose.foundation.layout.WindowInsetsSides\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.only\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.safeDrawing\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.Info\r\nimport androidx.compose.material3.ExperimentalMaterial3Api\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.ListItem\r\nimport androidx.compose.material3.MaterialTheme\r\nimport androidx.compose.material3.Scaffold\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.material3.TopAppBar\r\nimport androidx.compose.material3.TopAppBarDefaults\r\nimport androidx.compose.material3.rememberTopAppBarState\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.compose.runtime.remember\r\nimport androidx.compose.runtime.setValue\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.input.nestedscroll.nestedScroll\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport me.neko.nzhelper.ui.util.AboutDialog\r\n\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun PreferenceItem(\r\n    title: String,\r\n    summary: String? = null,\r\n    icon: @Composable (() -> Unit)? = null,\r\n    onClick: () -> Unit,\r\n) {\r\n    ListItem(\r\n        modifier = Modifier\r\n            .fillMaxWidth()\r\n            .clickable(onClick = onClick),\r\n        leadingContent = icon,\r\n        headlineContent = { Text(text = title, style = MaterialTheme.typography.bodyLarge) },\r\n        supportingContent = summary\r\n            ?.let { { Text(text = it, style = MaterialTheme.typography.bodyMedium) } }\r\n    )\r\n}\r\n\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun SettingsScreen() {\r\n    var showAboutDialog by remember { mutableStateOf(false) }\r\n    val scrollBehavior = TopAppBarDefaults.pinnedScrollBehavior(rememberTopAppBarState())\r\n\r\n    Scaffold(\r\n        topBar = {\r\n            TopAppBar(\r\n                title = { Text(\"设置\") },\r\n                scrollBehavior = scrollBehavior\r\n            )\r\n        },\r\n        contentWindowInsets = WindowInsets.safeDrawing.only(WindowInsetsSides.Top + WindowInsetsSides.Horizontal)\r\n    ) { innerPadding ->\r\n        Column(\r\n            modifier = Modifier\r\n                .fillMaxSize()\r\n                .padding(innerPadding)\r\n                .nestedScroll(scrollBehavior.nestedScrollConnection)\r\n        ) {\r\n            Text(\r\n                text = \"常规\",\r\n                modifier = Modifier.padding(start = 16.dp, top = 24.dp, bottom = 8.dp),\r\n                style = MaterialTheme.typography.labelLarge,\r\n                color = MaterialTheme.colorScheme.primary\r\n            )\r\n\r\n            PreferenceItem(\r\n                title = \"关于\",\r\n                summary = null,\r\n                icon = { Icon(Icons.Default.Info, contentDescription = null) },\r\n                onClick = { showAboutDialog = true }\r\n            )\r\n\r\n            Spacer(modifier = Modifier.weight(1f))\r\n        }\r\n\r\n        if (showAboutDialog) {\r\n            AboutDialog(onDismiss = { showAboutDialog = false })\r\n        }\r\n    }\r\n}\r\n\r\n@Preview(showBackground = true)\r\n@Composable\r\nfun SettingsScreenPreview() {\r\n    SettingsScreen()\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/me/neko/nzhelper/ui/screens/SettingsScreen.kt b/app/src/main/java/me/neko/nzhelper/ui/screens/SettingsScreen.kt
--- a/app/src/main/java/me/neko/nzhelper/ui/screens/SettingsScreen.kt	(revision 53dbb1212b49f88df6f6d0cd68e480b80ae8ac3e)
+++ b/app/src/main/java/me/neko/nzhelper/ui/screens/SettingsScreen.kt	(date 1752119502887)
@@ -12,6 +12,7 @@
 import androidx.compose.foundation.layout.safeDrawing
 import androidx.compose.material.icons.Icons
 import androidx.compose.material.icons.filled.Info
+import androidx.compose.material.icons.outlined.Info
 import androidx.compose.material3.ExperimentalMaterial3Api
 import androidx.compose.material3.Icon
 import androidx.compose.material3.ListItem
@@ -22,39 +23,17 @@
 import androidx.compose.material3.TopAppBarDefaults
 import androidx.compose.material3.rememberTopAppBarState
 import androidx.compose.runtime.Composable
-import androidx.compose.runtime.getValue
-import androidx.compose.runtime.mutableStateOf
-import androidx.compose.runtime.remember
-import androidx.compose.runtime.setValue
 import androidx.compose.ui.Modifier
 import androidx.compose.ui.input.nestedscroll.nestedScroll
 import androidx.compose.ui.tooling.preview.Preview
-import androidx.compose.ui.unit.dp
-import me.neko.nzhelper.ui.util.AboutDialog
-
-@OptIn(ExperimentalMaterial3Api::class)
-@Composable
-fun PreferenceItem(
-    title: String,
-    summary: String? = null,
-    icon: @Composable (() -> Unit)? = null,
-    onClick: () -> Unit,
-) {
-    ListItem(
-        modifier = Modifier
-            .fillMaxWidth()
-            .clickable(onClick = onClick),
-        leadingContent = icon,
-        headlineContent = { Text(text = title, style = MaterialTheme.typography.bodyLarge) },
-        supportingContent = summary
-            ?.let { { Text(text = it, style = MaterialTheme.typography.bodyMedium) } }
-    )
-}
+import androidx.navigation.NavController
+import androidx.navigation.compose.rememberNavController
 
 @OptIn(ExperimentalMaterial3Api::class)
 @Composable
-fun SettingsScreen() {
-    var showAboutDialog by remember { mutableStateOf(false) }
+fun SettingsScreen(
+    navController: NavController
+) {
     val scrollBehavior = TopAppBarDefaults.pinnedScrollBehavior(rememberTopAppBarState())
 
     Scaffold(
@@ -72,31 +51,33 @@
                 .padding(innerPadding)
                 .nestedScroll(scrollBehavior.nestedScrollConnection)
         ) {
-            Text(
-                text = "常规",
-                modifier = Modifier.padding(start = 16.dp, top = 24.dp, bottom = 8.dp),
-                style = MaterialTheme.typography.labelLarge,
-                color = MaterialTheme.colorScheme.primary
-            )
-
-            PreferenceItem(
-                title = "关于",
-                summary = null,
-                icon = { Icon(Icons.Default.Info, contentDescription = null) },
-                onClick = { showAboutDialog = true }
+            ListItem(
+                modifier = Modifier
+                    .fillMaxWidth()
+                    .clickable {
+                        navController.navigate("about")
+                    },
+                leadingContent = {
+                    Icon(
+                        imageVector = Icons.Outlined.Info,
+                        contentDescription = null,
+                    )
+                },
+                headlineContent = {
+                    Text(text = "关于", style = MaterialTheme.typography.bodyLarge)
+                }
             )
 
             Spacer(modifier = Modifier.weight(1f))
         }
 
-        if (showAboutDialog) {
-            AboutDialog(onDismiss = { showAboutDialog = false })
-        }
     }
 }
 
 @Preview(showBackground = true)
 @Composable
 fun SettingsScreenPreview() {
-    SettingsScreen()
+    SettingsScreen(
+        navController = rememberNavController()
+    )
 }
Index: app/src/main/java/me/neko/nzhelper/ui/util/AboutDialog.kt
===================================================================
diff --git a/app/src/main/java/me/neko/nzhelper/ui/util/AboutDialog.kt b/app/src/main/java/me/neko/nzhelper/ui/util/AboutDialog.kt
deleted file mode 100644
--- a/app/src/main/java/me/neko/nzhelper/ui/util/AboutDialog.kt	(revision 53dbb1212b49f88df6f6d0cd68e480b80ae8ac3e)
+++ /dev/null	(revision 53dbb1212b49f88df6f6d0cd68e480b80ae8ac3e)
@@ -1,138 +0,0 @@
-package me.neko.nzhelper.ui.util
-
-import androidx.compose.foundation.Image
-import androidx.compose.foundation.layout.Column
-import androidx.compose.foundation.layout.Spacer
-import androidx.compose.foundation.layout.height
-import androidx.compose.foundation.layout.size
-import androidx.compose.material3.AlertDialog
-import androidx.compose.material3.ExperimentalMaterial3Api
-import androidx.compose.material3.Text
-import androidx.compose.material3.TextButton
-import androidx.compose.runtime.Composable
-import androidx.compose.runtime.mutableStateOf
-import androidx.compose.runtime.remember
-import androidx.compose.ui.Alignment
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.platform.LocalContext
-import androidx.compose.ui.platform.LocalUriHandler
-import androidx.compose.ui.res.painterResource
-import androidx.compose.ui.text.LinkAnnotation
-import androidx.compose.ui.text.SpanStyle
-import androidx.compose.ui.text.TextStyle
-import androidx.compose.ui.text.buildAnnotatedString
-import androidx.compose.ui.text.style.TextDecoration
-import androidx.compose.ui.unit.dp
-import androidx.compose.ui.window.DialogProperties
-import me.neko.nzhelper.R
-
-@OptIn(ExperimentalMaterial3Api::class)
-@Composable
-fun AboutDialog(onDismiss: () -> Unit) {
-    val context = LocalContext.current
-    val versionName = remember {
-        context.packageManager
-            .getPackageInfo(context.packageName, 0)
-            .versionName
-    }
-    val uriHandler = LocalUriHandler.current
-    val url = "https://github.com/zzzdajb/DickHelper"
-    val label = "DickHelper"
-
-    val sourceLabel = "GitHub"
-    val sourceUrl = "https://github.com/bug-bit/NzHelper"
-
-    val showDonateDialog = remember { mutableStateOf(false) }
-
-    val annotated = buildAnnotatedString {
-        append("这是一个以开源项目 ")
-
-        val start = length
-        append(label)
-        val end = length
-
-        addStyle(
-            style = SpanStyle(textDecoration = TextDecoration.Underline),
-            start = start,
-            end = end
-        )
-        addLink(
-            LinkAnnotation.Clickable(
-                tag = label,
-                linkInteractionListener = { uriHandler.openUri(url) }
-            ),
-            start = start,
-            end = end
-        )
-
-        append(" 作为参考的使用 Kotlin 编写的 App")
-    }
-    val viewSource = buildAnnotatedString {
-        append("在 ")
-        val start = length
-        append(sourceLabel)
-        val end = length
-        addStyle(
-            style = SpanStyle(textDecoration = TextDecoration.Underline),
-            start = start,
-            end = end
-        )
-        addLink(
-            LinkAnnotation.Clickable(
-                tag = sourceLabel,
-                linkInteractionListener = { uriHandler.openUri(sourceUrl) }
-            ),
-            start = start,
-            end = end
-        )
-        append(" 查看源码")
-    }
-
-    AlertDialog(
-        onDismissRequest = onDismiss,
-        title = { Text("关于本应用") },
-        text = {
-            Column {
-                Text("版本：$versionName")
-                Spacer(Modifier.height(8.dp))
-                Text(text = annotated, style = TextStyle())
-                Spacer(Modifier.height(8.dp))
-                Text(text = viewSource, style = TextStyle())
-            }
-        },
-        confirmButton = {
-            TextButton(onClick = onDismiss) {
-                Text("确定")
-            }
-        },
-        dismissButton = {
-            TextButton(onClick = { showDonateDialog.value = true }) {
-                Text("捐赠打赏")
-            }
-        },
-        properties = DialogProperties(usePlatformDefaultWidth = true)
-    )
-
-    if (showDonateDialog.value) {
-        AlertDialog(
-            onDismissRequest = { showDonateDialog.value = false },
-            title = { Text("打赏我们") },
-            text = {
-                Column(horizontalAlignment = Alignment.CenterHorizontally) {
-                    Text("祝愿所有给我们打赏的小伙伴牛子长度翻倍 ❤️ 您的捐赠将是我们更新的动力")
-                    Spacer(Modifier.height(16.dp))
-                    Image(
-                        painter = painterResource(id = R.drawable.weixin),
-                        contentDescription = "QR Code",
-                        modifier = Modifier.size(200.dp)
-                    )
-                }
-            },
-            confirmButton = {
-                TextButton(onClick = { showDonateDialog.value = false }) {
-                    Text("知道了")
-                }
-            }
-        )
-    }
-}
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"VcsDirectoryMappings\">\r\n    <mapping directory=\"$PROJECT_DIR$\" vcs=\"Git\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
--- a/.idea/vcs.xml	(revision 53dbb1212b49f88df6f6d0cd68e480b80ae8ac3e)
+++ b/.idea/vcs.xml	(date 1752070295518)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="VcsDirectoryMappings">
-    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+    <mapping directory="" vcs="Git" />
   </component>
 </project>
\ No newline at end of file
Index: app/src/main/res/drawable/code_24px.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/code_24px.xml b/app/src/main/res/drawable/code_24px.xml
new file mode 100644
--- /dev/null	(date 1752118807449)
+++ b/app/src/main/res/drawable/code_24px.xml	(date 1752118807449)
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="960"
+    android:viewportHeight="960">
+    <path
+        android:fillColor="@android:color/white"
+        android:pathData="M320,720L80,480L320,240L377,297L193,481L376,664L320,720ZM640,720L583,663L767,479L584,296L640,240L880,480L640,720Z" />
+</vector>
